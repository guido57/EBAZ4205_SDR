-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\AMdemod\AM_demodulator.vhd
-- Created: 2022-12-23 10:59:43
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.33333e-10
-- Target subsystem base rate: 1e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out_16_bit                    ce_out        1e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: AM_demodulator
-- Source Path: AMdemod/AM demodulator
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY AM_demodulator IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        Input_I                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        Input_Q                           :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        ce_out                            :   OUT   std_logic;
        Out_16_bit                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END AM_demodulator;


ARCHITECTURE rtl OF AM_demodulator IS

  -- Component Declarations
  COMPONENT Sqrt
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_3_0                       :   IN    std_logic;
          din                             :   IN    std_logic_vector(64 DOWNTO 0);  -- sfix65
          dout                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Sqrt
    USE ENTITY work.Sqrt(rtl);

  -- Signals
  SIGNAL Input_I_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL Product_out1                     : signed(63 DOWNTO 0);  -- sfix64
  SIGNAL Input_Q_signed                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL Product1_out1                    : signed(63 DOWNTO 0);  -- sfix64
  SIGNAL Add_out1                         : signed(64 DOWNTO 0);  -- sfix65
  SIGNAL Sqrt_out1                        : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_Sqrt : Sqrt
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_3_0 => clk_enable,
              din => std_logic_vector(Add_out1),  -- sfix65
              dout => Sqrt_out1  -- int16
              );

  Input_I_signed <= signed(Input_I);

  Product_out1 <= Input_I_signed * Input_I_signed;

  Input_Q_signed <= signed(Input_Q);

  Product1_out1 <= Input_Q_signed * Input_Q_signed;

  Add_out1 <= resize(Product_out1, 65) + resize(Product1_out1, 65);

  ce_out <= clk_enable;

  Out_16_bit <= Sqrt_out1;

END rtl;

